// ---------- GENERATOR Y DATASOURCE ----------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- MODELO USER ----------
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}


// ---------- MODELOS ---------- 
model Team {
  id          Int       @id @default(autoincrement())
  name        String
  shortName   String?
  logo        String?   // ðŸ‘ˆ NUEVO
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  players     PlayerTeam[]
  homeMatches Match[]  @relation("HomeMatches")
  awayMatches Match[]  @relation("AwayMatches")
  tournaments TeamTournament[]
}
 
model Player {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  number    Int?
  position  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  teams     PlayerTeam[]
}

model PlayerTeam {
  id       Int  @id @default(autoincrement())
  player   Player @relation(fields: [playerId], references: [id])
  playerId Int
  team     Team   @relation(fields: [teamId], references: [id])
  teamId   Int
  from     DateTime? @default(now())
  to       DateTime?
}

model TeamTournament {
  id           Int        @id @default(autoincrement())
  team         Team       @relation(fields: [teamId], references: [id])
  teamId       Int
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
}

model Tournament {
  id          Int       @id @default(autoincrement())
  name        String
  season      String?
  startDate   DateTime?
  endDate     DateTime?
  location    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teams       TeamTournament[]
  matches     Match[]
}

model Match {
  id           Int        @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  date         DateTime
  venue        String?
  status       MatchStatus @default(SCHEDULED)
  homeTeam     Team @relation("HomeMatches", fields: [homeTeamId], references: [id])
  homeTeamId   Int
  awayTeam     Team @relation("AwayMatches", fields: [awayTeamId], references: [id])
  awayTeamId   Int
  homeScore    Int? @default(0)
  awayScore    Int? @default(0)
}

enum MatchStatus {
  SCHEDULED
  PLAYED
  CANCELED
}
